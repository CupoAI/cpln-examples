kind: gvc
name: {{ .Values.online_boutique.gvc }}
description: {{ .Values.online_boutique.gvc }}
tags: {}
spec:
  staticPlacement:
    locationLinks:
{{- range splitList "," .Values.online_boutique.locations }}
      - //location/{{ . | trim }}
{{- end }}
{{- if and .Values.tracing (or .Values.tracing.otel .Values.tracing.controlplane) }}
  tracing:
    {{- if .Values.tracing.otel }}
    provider:
      otel:
        endpoint: '{{ .Values.tracing.otel.otel_workload }}.{{ .Values.online_boutique.gvc }}.cpln.local:{{ .Values.tracing.otel.otel_port }}'
    sampling: {{ .Values.tracing.otel.sampling }}
    {{- end }}
    {{- if .Values.tracing.controlplane }}
    provider:
      controlplane: {}
    customTags: {}
    sampling: {{ .Values.tracing.controlplane.sampling }}
    {{- end }}
{{- end }}

---
kind: identity
name: cartservice-identity
gvc: {{ .Values.online_boutique.gvc }}
description: cartservice-identity
tags: {}

{{- if .Values.online_boutique.db_postgres }}
---
kind: secret
name: db-secret-{{ .Values.online_boutique.gvc }}
description: DB connection details
tags: {}
type: dictionary
data:
  POSTGRES_DATABASE_NAME: {{ .Values.postgres.dbname }}
  POSTGRES_TABLE_NAME: {{ .Values.online_boutique.db_postgres.POSTGRES_TABLE_NAME }}
  POSTGRES_PASSWORD: {{ .Values.postgres.password }}
  POSTGRES_USERNAME: {{ .Values.postgres.dbname }}
---
kind: policy
name: cartservice-{{ .Values.online_boutique.gvc }}
tags: {}
origin: default
bindings:
  - permissions:
      - reveal
    principalLinks:
      - //gvc/{{ .Values.online_boutique.gvc }}/identity/cartservice-identity
targetKind: secret
targetLinks:
  - //secret/db-secret-{{ .Values.online_boutique.gvc }}
{{- end}}

---
kind: workload
name: adservice
gvc: {{ .Values.online_boutique.gvc }}
description: adservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 300m
      env:
        - name: PORT
          value: '9555'
      image: 'gcr.io/google-samples/microservices-demo/adservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        tcpSocket:
          port: 9555
        timeoutSeconds: 1
      memory: 300Mi
      ports:
        - number: 9555
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        tcpSocket:
          port: 9555
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/frontend
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: cartservice
gvc: {{ .Values.online_boutique.gvc }}
description: cartservice
tags: {}
spec:
  type: serverless
  containers:
    - name: server
      cpu: 300m
      env:
{{- if .Values.online_boutique.db_postgres }}
        - name: POSTGRES_HOSTNAME
          value: {{ .Values.pgcat.name }}.{{ .Values.pgcat.gvc }}.cpln.local:6432
        - name: POSTGRES_DATABASE_NAME
          value: cpln://secret/db-secret-{{ .Values.online_boutique.gvc }}.POSTGRES_DATABASE_NAME
        - name: POSTGRES_PASSWORD
          value: cpln://secret/db-secret-{{ .Values.online_boutique.gvc }}.POSTGRES_PASSWORD
        - name: POSTGRES_TABLE_NAME
          value: cpln://secret/db-secret-{{ .Values.online_boutique.gvc }}.POSTGRES_TABLE_NAME
        - name: POSTGRES_USERNAME
          value: cpln://secret/db-secret-{{ .Values.online_boutique.gvc }}.POSTGRES_USERNAME
{{- else }}
        - name: REDIS_ADDR
          value: 'redis-cart:6389'
{{- end }}
      image: 'igorchyts/online-boutique-cartservice:0.8.1-cpln-3'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 7070
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 7070
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 7070
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
        - //workload/frontend
  identityLink: //identity/cartservice-identity
  localOptions: []
  supportDynamicTags: true
---
kind: workload
name: checkoutservice
gvc: {{ .Values.online_boutique.gvc }}
description: checkoutservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: CART_SERVICE_ADDR
          value: 'cartservice.{{ .Values.online_boutique.gvc }}.cpln.local:7070'
        - name: CURRENCY_SERVICE_ADDR
          value: 'currencyservice.{{ .Values.online_boutique.gvc }}.cpln.local:7000'
        - name: EMAIL_SERVICE_ADDR
          value: 'emailservice.{{ .Values.online_boutique.gvc }}.cpln.local:8080'
        - name: PAYMENT_SERVICE_ADDR
          value: 'paymentservice.{{ .Values.online_boutique.gvc }}.cpln.local:50051'
        - name: PORT
          value: '5050'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: 'productcatalogservice.{{ .Values.online_boutique.gvc }}.cpln.local:3550'
        - name: SHIPPING_SERVICE_ADDR
          value: 'shippingservice.{{ .Values.online_boutique.gvc }}.cpln.local:50051'
      image: 'gcr.io/google-samples/microservices-demo/checkoutservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5050
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 5050
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5050
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/frontend
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: currencyservice
gvc: {{ .Values.online_boutique.gvc }}
description: currencyservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '7000'
      image: 'gcr.io/google-samples/microservices-demo/currencyservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 7000
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 7000
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 7000
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
        - //workload/frontend
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: emailservice
gvc: {{ .Values.online_boutique.gvc }}
description: emailservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '8080'
      image: 'gcr.io/google-samples/microservices-demo/emailservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8080
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 8080
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8080
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: frontend
gvc: {{ .Values.online_boutique.gvc }}
description: frontend
spec:
  type: standard
  containers:
    - name: server
      cpu: 200m
      env:
        - name: AD_SERVICE_ADDR
          value: 'adservice.{{ .Values.online_boutique.gvc }}.cpln.local:9555'
        - name: CART_SERVICE_ADDR
          value: 'cartservice.{{ .Values.online_boutique.gvc }}.cpln.local:7070'
        - name: CHECKOUT_SERVICE_ADDR
          value: 'checkoutservice.{{ .Values.online_boutique.gvc }}.cpln.local:5050'
        - name: CURRENCY_SERVICE_ADDR
          value: 'currencyservice.{{ .Values.online_boutique.gvc }}.cpln.local:7000'
        - name: ENABLE_PROFILER
          value: '0'
        - name: PORT
          value: '8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: 'productcatalogservice.{{ .Values.online_boutique.gvc }}.cpln.local:3550'
        - name: RECOMMENDATION_SERVICE_ADDR
          value: 'recommendationservice.{{ .Values.online_boutique.gvc }}.cpln.local:8080'
        - name: SHIPPING_SERVICE_ADDR
          value: 'shippingservice.{{ .Values.online_boutique.gvc }}.cpln.local:50051'
      image: 'igorchyts/online-boutique-frontend:v0.8.0-cpln'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: Cookie
              value: shop_session-id=x-liveness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 8080
          protocol: http
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: Cookie
              value: shop_session-id=x-readiness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 5
      metric: rps
      minScale: 1
      scaleToZeroDelay: 300
      target: 10
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 60
  firewallConfig:
    external:
      inboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/loadgenerator
  localOptions: []
  securityOptions:
    filesystemGroupId: 1000
  supportDynamicTags: true
---
kind: workload
name: loadgenerator
gvc: {{ .Values.online_boutique.gvc }}
description: loadgenerator
spec:
  type: standard
  containers:
    - name: main
      cpu: 500m
      env:
        - name: FRONTEND_ADDR
          value: 'frontend.{{ .Values.online_boutique.gvc }}.cpln.local:8080'
        - name: USERS
          value: '3'
      image: 'gcr.io/google-samples/microservices-demo/loadgenerator:v0.8.0'
      inheritEnv: false
      memory: 512Mi
      ports: []
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: cpu
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowHostname: []
    internal:
      inboundAllowType: none
      inboundAllowWorkload: []
  supportDynamicTags: false
---
kind: workload
name: paymentservice
gvc: {{ .Values.online_boutique.gvc }}
description: paymentservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '50051'
      image: 'gcr.io/google-samples/microservices-demo/paymentservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 50051
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 50051
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 50051
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: productcatalogservice
gvc: {{ .Values.online_boutique.gvc }}
description: productcatalogservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '3550'
      image: 'gcr.io/google-samples/microservices-demo/productcatalogservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 3550
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 3550
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 3550
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
        - //workload/frontend
        - //workload/recommendationservice
  localOptions: []
  supportDynamicTags: false
---
kind: workload
name: recommendationservice
gvc: {{ .Values.online_boutique.gvc }}
description: recommendationservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: 'productcatalogservice.{{ .Values.online_boutique.gvc }}.cpln.local:3550'
      image: 'gcr.io/google-samples/microservices-demo/recommendationservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8080
        timeoutSeconds: 1
      memory: 450Mi
      ports:
        - number: 8080
          protocol: http
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8080
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/frontend
  localOptions: []
  supportDynamicTags: false

{{- if not .Values.online_boutique.db_postgres }}
---
kind: secret
name: redis-boutique-conf
description: redis-boutique-conf
tags: {}
type: opaque
data:
  encoding: plain
  payload: port 6389
---
kind: identity
name: redis-identity
gvc: {{ .Values.online_boutique.gvc }}
description: redis-identity
tags: {}
---
kind: policy
name: redis-cart
tags: {}
origin: default
bindings:
  - permissions:
      - reveal
    principalLinks:
      - //gvc/{{ .Values.online_boutique.gvc }}/identity/redis-identity
targetKind: secret
targetLinks:
  - //secret/redis-boutique-conf
---
kind: volumeset
name: redis-volume
gvc: {{ .Values.online_boutique.gvc }}
description: redis-volume
spec:
  fileSystemType: ext4
  initialCapacity: 10
  performanceClass: general-purpose-ssd
---
kind: workload
name: redis-cart
gvc: {{ .Values.online_boutique.gvc }}
description: redis
spec:
  type: stateful
  containers:
    - name: redis
      args:
        - /etc/redis/redis.conf
      cpu: 75m
      image: 'redis:alpine'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 6389
        timeoutSeconds: 1
      memory: 150Mi
      ports:
        - number: 6389
          protocol: tcp
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 6389
        timeoutSeconds: 1
      volumes:
        - path: /data
          recoveryPolicy: retain
          uri: 'cpln://volumeset/redis-volume'
        - path: /etc/redis/redis.conf
          recoveryPolicy: retain
          uri: 'cpln://secret/redis-boutique-conf'
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: cpu
      minScale: 1
      scaleToZeroDelay: 300
      target: 100
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 10
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/cartservice
  identityLink: //identity/redis-identity
  localOptions: []
  rolloutOptions:
    maxSurgeReplicas: 25%
    maxUnavailableReplicas: '1'
    minReadySeconds: 0
  supportDynamicTags: false
{{- end }}
---
kind: workload
name: shippingservice
gvc: {{ .Values.online_boutique.gvc }}
description: shippingservice
spec:
  type: serverless
  containers:
    - name: server
      cpu: 200m
      env:
        - name: DISABLE_PROFILER
          value: '1'
        - name: PORT
          value: '50051'
      image: 'gcr.io/google-samples/microservices-demo/shippingservice:v0.8.0'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 50051
        timeoutSeconds: 1
      memory: 128Mi
      ports:
        - number: 50051
          protocol: grpc
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 50051
        timeoutSeconds: 1
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: concurrency
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: true
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR: []
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: workload-list
      inboundAllowWorkload:
        - //workload/checkoutservice
        - //workload/frontend
  localOptions: []
  supportDynamicTags: false