kind: workload
name: kafka-dev-cluster
description: kafka-dev-cluster
tags: {}
spec:
  type: stateful
  containers:
    - name: kafka
      args:
        - '-c'
        - >-
          cp /scripts/kafka-init.sh /tmp/ && chmod +x /tmp/kafka-init.sh &&
          /tmp/kafka-init.sh && /opt/bitnami/scripts/kafka/entrypoint.sh
          /opt/bitnami/scripts/kafka/run.sh
      command: /bin/bash
      cpu: '2'
      env:
        - name: BITNAMI_DEBUG
          value: 'true'
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: CONTROLLER
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: >-
            0@kafka-dev-cluster-0.kafka-dev-cluster:9093,1@kafka-dev-cluster-1.kafka-dev-cluster:9093,2@kafka-dev-cluster-2.kafka-dev-cluster:9093
        - name: KAFKA_CFG_LISTENERS
          value: 'CLIENT://:9092,INTERNAL://:9094,CONTROLLER://:9093'
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: 'CLIENT:PLAINTEXT,INTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT'
        - name: KAFKA_CFG_PROCESS_ROLES
          value: 'controller,broker'
        - name: KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL
          value: PLAIN
        - name: KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL
          value: PLAIN
        - name: KAFKA_CLIENT_PASSWORDS
          value: 'cpln://secret/kafka-cluster-user-passwords.client-passwords'
        - name: KAFKA_CLIENT_USERS
          value: kafka-admin
        - name: KAFKA_CONTROLLER_PASSWORD
          value: 'cpln://secret/kafka-cluster-user-passwords.controller-password'
        - name: KAFKA_CONTROLLER_USER
          value: controller_user
        - name: KAFKA_HEAP_OPTS
          value: '-Xmx1024m -Xms1024m'
        - name: KAFKA_INTER_BROKER_PASSWORD
          value: 'cpln://secret/kafka-cluster-user-passwords.inter-broker-password'
        - name: KAFKA_INTER_BROKER_USER
          value: inter_broker_user
        - name: KAFKA_KRAFT_BOOTSTRAP_SCRAM_USERS
          value: 'true'
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: 'cpln://secret/kafka-cluster-kraft-cluster-id.kraft-cluster-id'
        - name: KAFKA_MIN_ID
          value: '0'
        - name: KAFKA_VOLUME_DIR
          value: /bitnami/kafka
      image: 'docker.io/bitnami/kafka:3.5.1-debian-11-r14'
      inheritEnv: false
      livenessProbe:
        failureThreshold: 20
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 9093
        timeoutSeconds: 9
      memory: 4Gi
      ports:
        - number: 9092
          protocol: tcp
        - number: 9093
          protocol: tcp
        - number: 9094
          protocol: tcp
      readinessProbe:
        failureThreshold: 20
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 9093
        timeoutSeconds: 9
      volumes:
        - path: /bitnami/kafka
          recoveryPolicy: retain
          uri: 'cpln://volumeset/kafka-data'
        - path: /opt/bitnami/kafka/logs
          recoveryPolicy: retain
          uri: 'scratch://logs'
        - path: /configmaps/server.properties
          recoveryPolicy: retain
          uri: 'cpln://secret/kafka-cluster-controller-configuration'
        - path: /scripts/kafka-init.sh
          recoveryPolicy: retain
          uri: 'cpln://secret/kafka-cluster-scripts'
        - path: /temp
          recoveryPolicy: retain
          uri: 'scratch://temp'
    - name: kafka-exporter
      args:
        - '-c'
        - >-
          sleep 60 && kafka_exporter --kafka.server=localhost:9092
          --web.listen-address=:9308
      command: /bin/bash
      cpu: 100m
      env:
        - name: BITNAMI_DEBUG
          value: 'true'
      image: 'docker.io/bitnami/kafka-exporter:1.7.0'
      inheritEnv: false
      memory: 128Mi
      metrics:
        path: /metrics
        port: 9308
      ports:
        - number: 9308
          protocol: tcp
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 3
      metric: disabled
      minScale: 3
      scaleToZeroDelay: 300
      target: 95
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 5
  firewallConfig:
    external:
      inboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: same-gvc
      inboundAllowWorkload: []
  identityLink: /org/engageai/gvc/engageai-dev/identity/kafka-cluster-identity
  localOptions: []
  rolloutOptions:
    maxSurgeReplicas: 25%
    maxUnavailableReplicas: '1'
    minReadySeconds: 0
    scalingPolicy: Parallel
  securityOptions:
    filesystemGroupId: 1001
  supportDynamicTags: false